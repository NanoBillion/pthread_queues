.Dd October 10, 2023
.Dt PQ_SEND_TIMED 3
.Os
.Sh NAME
.Nm pq_send_timed
.Nd send a pthread queue message with a timeout
.Sh SYNOPSIS
.In pq.h
.Ft pq_status_t
.Fn pq_send_timed "struct pq_queue *q" "const struct pq_msg *m" "pq_timeout_t t"
.Sh DESCRIPTION
The
.Fn pq_send_timed
function attempts to send the message pointed to by
.Fa m
to the specified
.Fa q
with a timeout given by
.Fa t .
.Pp
A successful call copies the message data pointed to by
.Fa m->msg
to queue internal memory.
This means that the object can go out of scope or be deallocated.
.Pp
A timeout value of PQ_TIMEOUT_ZERO will cause
.Nm
to return immediately.
A timeout value of PQ_TIMEOUT_INF will cause
.Nm
to block indefinitely.
.Pp
The timeout has a resolution given by the PQ_TIMEOUT_RESOLUTION macro,
expressed as a fraction of a second.
By default it is 1000, giving 1ms
resolution of real time.
.Sh RETURN VALUES
If the message was sent successfully, the function returns zero.
Otherwise an error number is returned to indicate the error or
special condition.
.Sh ERRORS
The
.Nm
function fails if:
.Bl -tag -width Er
.It Bq Er EINVAL
The argument
.Fa q
or the argument
.Fa m
is NULL.
.It Bq Er EINVAL
The pointer
.Fa m->msg
is NULL.
.It Bq Er EINVAL
The priority
.Fa m->prio
exceeds the queue's maximum priority attribute.
.It Bq Er EMSGSIZE
The message size
.Fa m->size
exceeds the queue's maximum message size attribute.
.It Bq Er EAGAIN
The queue is full and PQ_TIMEOUT_ZERO was specified.
.It Bq Er ETIMEDOUT
The queue is still full after the timeout expired.
.El
.Pp
In addition, all errors caused by a failed call to
.Fn pthread_mutex_lock
and
.Fn pthread_mutex_unlock
may be returned.
.Pp
.Sh SEE ALSO
.Xr pq_create 3 ,
.Xr pq_destroy 3 ,
.Xr pq_recv_timed 3 ,
.Xr pq_recv_nonbl 3 ,
.Xr pq_send_timed 3
.\" vim: syntax=groff
